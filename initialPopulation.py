import random as ran
import fitness as fitn
import exec_create_island as eci
from ast import literal_eval

log = {
    0: ['A1', 'A2', 'A3', 'A6'],
    1: ['A1', 'A3', 'A2', 'A6'],
    2: ['A1', 'A4', 'A5', 'A6'],
    3: ['A1', 'A5', 'A4', 'A6']}
log01 = {
    0: ['A1', 'A2', 'A4', 'A6'],
    1: ['A1', 'A2', 'A5', 'A6'],
    2: ['A1', 'A3', 'A4', 'A6'],
    3: ['A1', 'A3', 'A5', 'A6'],
    4: ['A1', 'A4', 'A2', 'A6'],
    5: ['A1', 'A4', 'A3', 'A6'],
    6: ['A1', 'A5', 'A2', 'A6'],
    7: ['A1', 'A5', 'A3', 'A6']}
log1 = {
    0: ['A1', 'A2', 'A3', 'A4', 'A5', 'A6', 'A7', 'A9'],
    1: ['A1', 'A2', 'A4', 'A3', 'A5', 'A6', 'A8', 'A9'],
    2: ['A1', 'A2', 'A3', 'A4', 'A5', 'A6', 'A8', 'A9'],
    3: ['A1', 'A2', 'A4', 'A3', 'A5', 'A6', 'A7', 'A9']}
log2 = {
    0: ['A', 'C', 'B', 'G', 'F', 'H'],
    1: ['A', 'B', 'F', 'C', 'G', 'H'],
    2: ['A', 'C', 'G', 'B', 'F', 'H'],
    3: ['A', 'B', 'C', 'G', 'F', 'I', 'L'],
    4: ['A', 'B', 'F', 'C', 'G', 'I', 'K', 'L'],
    5: ['A', 'C', 'B', 'F', 'G', 'I', 'J', 'L'],
    6: ['A', 'C', 'B', 'G', 'F', 'I', 'J', 'K', 'L'],
    7: ['A', 'B', 'C', 'E', 'G', 'F', 'I', 'J', 'L'],
    8: ['A', 'B', 'E', 'F', 'C', 'G', 'I', 'L'],
    9: ['A', 'C', 'G', 'B', 'E', 'F', 'I', 'J', 'L'],
    10: ['A', 'B', 'C', 'E', 'D', 'F', 'G', 'I', 'L'],
    11: ['A', 'C', 'D', 'B', 'E', 'F', 'G', 'I', 'L'],
    12: ['A', 'B', 'C', 'F', 'D', 'G', 'I', 'K', 'L'],
    13: ['A', 'C', 'D', 'B', 'F', 'G', 'I', 'K', 'L'],
    14: ['A', 'B', 'C', 'D', 'G', 'F', 'I', 'K', 'L'],
    15: ['A', 'C', 'B', 'F', 'D', 'G', 'I', 'L']}
log3 = {
    0: ['A1', 'A2', 'A4', 'A5', 'A7', 'A8'],
    1: ['A1', 'A3', 'A4', 'A6', 'A7', 'A8'],
    2: ['A1', 'A2', 'A4', 'A5', 'A7'],
    3: ['A1', 'A3', 'A4', 'A6', 'A7']}
#EVC1
log4 = {
    0: ['E', 'D', 'D', 'H', 'I', 'H', 'I', 'H', 'D', 'H', 'D', 'H', 'D', 'D', 'H', 'H', 'D', 'A'],
    1: ['E', 'D', 'D', 'D', 'D', 'F', 'D', 'D', 'D', 'D', 'D', 'A'],
    2: ['E', 'D', 'D', 'C', 'D', 'C', 'D', 'C', 'D', 'C', 'D', 'A'],
    3: ['E', 'D', 'D', 'C', 'C', 'A'],
    4: ['E', 'D', 'D', 'C', 'D', 'C', 'D', 'C', 'D', 'A']}
log5 = {
    0: ['A', 'B', 'C', 'D', 'E', 'G'],
    1: ['A', 'D', 'B', 'C', 'E', 'G'],
    2: ['A', 'B', 'C', 'F', 'G'],
    3: ['A', 'C', 'B', 'F', 'G'],
    4: ['A', 'B', 'D', 'C', 'F', 'G'],
    5: ['A', 'C', 'D', 'B', 'F', 'G'],
    6: ['A', 'B', 'D', 'C', 'E', 'G'],
    7: ['A', 'B', 'C', 'D', 'F', 'G'],
    8: ['A', 'D', 'B', 'C', 'F', 'G'],
    9: ['A', 'D', 'C', 'B', 'F', 'G'],
    10: ['A', 'C', 'B', 'E', 'G']}
log6 = {
    0: ['E', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'C', 'D', 'C', 'D', 'D', 'C', 'D', 'C', 'D', 'B', 'B', 'D', 'D', 'C', 'A'],
    1: ['E', 'D', 'D', 'C', 'D', 'A'],
    2: ['E', 'D', 'D', 'D', 'C', 'D', 'C', 'D', 'D', 'D', 'C', 'D', 'C', 'D', 'C', 'C', 'D', 'D', 'D', 'D', 'C', 'C', 'D', 'C', 'C', 'C', 'A'],
    3: ['E', 'D', 'D', 'D', 'D', 'C', 'C', 'C', 'D', 'A'],
    4: ['E', 'D', 'D', 'C', 'D', 'D', 'B', 'B', 'B', 'B', 'B', 'B', 'A'],
    5: ['E', 'D', 'D', 'C', 'D', 'D', 'D', 'C', 'D', 'C', 'C', 'D', 'D', 'A'],
    6: ['E', 'D', 'D', 'D', 'D', 'A'],
    7: ['E', 'D', 'D', 'D', 'D', 'D', 'D', 'C', 'C', 'D', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'H', 'D', 'D', 'F', 'B', 'D', 'D', 'D', 'C', 'D', 'C', 'C', 'D', 'D', 'J', 'J', 'D', 'D', 'C', 'D', 'D', 'D', 'C', 'D', 'D', 'C', 'C', 'C', 'D', 'C', 'D', 'C', 'D', 'D', 'D', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'D', 'O', 'D', 'D', 'A'],
    8: ['E', 'D', 'D', 'C', 'D', 'C', 'D', 'J', 'D', 'D', 'C', 'D', 'D', 'C', 'D', 'H', 'D', 'D', 'D', 'D', 'D', 'A'],
    9: ['E', 'D', 'D', 'D', 'H', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'C', 'C', 'D', 'C', 'D', 'C', 'C', 'D', 'C', 'D', 'C', 'D', 'C', 'C', 'D', 'D', 'D', 'D', 'A']}
log7 = {
    0: ['E', 'D', 'D', 'C', 'D', 'D', 'A'],
    1: ['E', 'D', 'D', 'D', 'C', 'D', 'D', 'A'],
    2: ['E', 'D', 'D', 'D', 'B', 'B', 'B', 'B', 'B', 'B', 'A'],
    3: ['E', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'C', 'D', 'D', 'C', 'D', 'D', 'H', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'C', 'D', 'C', 'D', 'C', 'D', 'B', 'B', 'C', 'B', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'C', 'D', 'B', 'B', 'D', 'D', 'D', 'C', 'D', 'B', 'B', 'B', 'B', 'D', 'C', 'A'],
    4: ['E', 'D', 'D', 'C', 'D', 'D', 'D', 'C', 'D', 'D', 'A'],
    5: ['E', 'D', 'D', 'C', 'D', 'A'],
    6: ['E', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'C', 'D', 'C', 'D', 'D', 'C', 'D', 'C', 'D', 'B', 'B', 'D', 'D', 'C', 'A'],
    7: ['E', 'D', 'D', 'D', 'D', 'B', 'D', 'H', 'I', 'H', 'I', 'H', 'D', 'D', 'H', 'D', 'D', 'H', 'H', 'A'],
    8: ['E', 'D', 'D', 'C', 'D', 'D', 'H', 'D', 'A'],
    9: ['E', 'D', 'D', 'D', 'D', 'D', 'C', 'D', 'C', 'D', 'D', 'D', 'D', 'H', 'D', 'D', 'H', 'H', 'D', 'Z', 'A'],
    10: ['E', 'D', 'D', 'D', 'C', 'D', 'A'],
    11: ['E', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'B', 'A'],
    12: ['E', 'D', 'D', 'D', 'C', 'D', 'B', 'B', 'B', 'B', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'D', 'C', 'D', 'B', 'B', 'B', 'B', 'B', 'D', 'B', 'D', 'C', 'C', 'D', 'D', 'D', 'C', 'D', 'B', 'D', 'D', 'D', 'D', 'D', 'A'],
    13: ['E', 'D', 'D', 'C', 'D', 'C', 'D', 'J', 'D', 'D', 'C', 'D', 'D', 'C', 'D', 'H', 'D', 'D', 'D', 'D', 'D', 'A'],
    14: ['E', 'D', 'D', 'D', 'D', 'D', 'D', 'C', 'C', 'D', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'H', 'D', 'D', 'F', 'B', 'D', 'D', 'D', 'C', 'D', 'C', 'C', 'D', 'D', 'J', 'J', 'D', 'D', 'C', 'D', 'D', 'D', 'C', 'D', 'D', 'C', 'C', 'C', 'D', 'C', 'D', 'C', 'D', 'D', 'D', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'D', 'O', 'D', 'D', 'A'],
    15: ['E', 'D', 'D', 'C', 'D', 'D', 'B', 'B', 'B', 'B', 'B', 'B', 'A'],
    16: ['E', 'D', 'D', 'D', 'D', 'A'],
    17: ['E', 'D', 'D', 'H', 'I', 'H', 'I', 'H', 'D', 'H', 'D', 'H', 'D', 'D', 'H', 'H', 'D', 'A'],
    18: ['E', 'D', 'D', 'D', 'C', 'D', 'C', 'C', 'C', 'D', 'D', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'D', 'C', 'D', 'D', 'C', 'D', 'D', 'D', 'A']}
log8 = {
    0: ['E', 'D', 'D', 'D', 'D', 'A'],
    1: ['E', 'D', 'D', 'D', 'D', 'B', 'B', 'B', 'D', 'D', 'C', 'C', 'C', 'C', 'D', 'B', 'B', 'B', 'D', 'D', 'D', 'C', 'C', 'D', 'B', 'B', 'B', 'B', 'A'],
    2: ['E', 'D', 'D', 'C', 'D', 'D', 'D', 'C', 'D', 'D', 'A'],
    3: ['E', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'C', 'D', 'C', 'D', 'D', 'C', 'D', 'C', 'D', 'B', 'B', 'D', 'D', 'C', 'A'],
    4: ['E', 'D', 'D', 'D', 'C', 'D', 'D', 'A'],
    5: ['E', 'D', 'D', 'D', 'B', 'B', 'B', 'B', 'B', 'B', 'A'],
    6: ['E', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'A'],
    7: ['E', 'M', 'P', 'P', 'P', 'D', 'D', 'C', 'D', 'C', 'D', 'A'],
    8: ['E', 'D', 'D', 'D', 'C', 'D', 'C', 'C', 'C', 'D', 'D', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'D', 'C', 'D', 'D', 'C', 'D', 'D', 'D', 'A'],
    9: ['E', 'D', 'D', 'C', 'D', 'D', 'B', 'B', 'B', 'B', 'B', 'B', 'A'],
    10: ['E', 'D', 'D', 'C', 'D', 'D', 'A'],
    11: ['E', 'D', 'D', 'H', 'I', 'H', 'I', 'H', 'D', 'H', 'D', 'H', 'D', 'D', 'H', 'H', 'D', 'A'],
    12: ['E', 'D', 'D', 'D', 'C', 'D', 'B', 'B', 'B', 'B', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'D', 'C', 'D', 'B', 'B', 'B', 'B', 'B', 'D', 'B', 'D', 'C', 'C', 'D', 'D', 'D', 'C', 'D', 'B', 'D', 'D', 'D', 'D', 'D', 'A'],
    13: ['E', 'D', 'D', 'C', 'D', 'D', 'H', 'D', 'A'],
    14: ['E', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'B', 'A'],
    15: ['E', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'A'],
    16: ['E', 'D', 'D', 'C', 'D', 'D', 'D', 'C', 'D', 'C', 'C', 'D', 'D', 'A'],
    17: ['E', 'D', 'D', 'C', 'D', 'A'],
    18: ['E', 'D', 'D', 'D', 'C', 'D', 'C', 'C', 'C', 'D', 'D', 'A'],
    19: ['E', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'C', 'D', 'D', 'C', 'D', 'D', 'H', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'C', 'D', 'C', 'D', 'C', 'D', 'B', 'B', 'C', 'B', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'C', 'D', 'B', 'B', 'D', 'D', 'D', 'C', 'D', 'B', 'B', 'B', 'B', 'D', 'C', 'A'],
    20: ['E', 'D', 'D', 'D', 'C', 'D', 'A'],
    21: ['E', 'D', 'D', 'C', 'D', 'C', 'D', 'J', 'D', 'D', 'C', 'D', 'D', 'C', 'D', 'H', 'D', 'D', 'D', 'D', 'D', 'A'],
    22: ['E', 'D', 'D', 'D', 'D', 'D', 'D', 'C', 'C', 'D', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'H', 'D', 'D', 'F', 'B', 'D', 'D', 'D', 'C', 'D', 'C', 'C', 'D', 'D', 'J', 'J', 'D', 'D', 'C', 'D', 'D', 'D', 'C', 'D', 'D', 'C', 'C', 'C', 'D', 'C', 'D', 'C', 'D', 'D', 'D', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'D', 'O', 'D', 'D', 'A'],
    23: ['E', 'D', 'D', 'D', 'D', 'B', 'D', 'H', 'I', 'H', 'I', 'H', 'D', 'D', 'H', 'D', 'D', 'H', 'H', 'A'],
    24: ['E', 'D', 'D', 'D', 'H', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'C', 'C', 'D', 'C', 'D', 'C', 'C', 'D', 'C', 'D', 'C', 'D', 'C', 'C', 'D', 'D', 'D', 'D', 'A'],
    25: ['E', 'D', 'D', 'D', 'D', 'D', 'C', 'D', 'C', 'D', 'D', 'D', 'D', 'H', 'D', 'D', 'H', 'H', 'D', 'Z', 'A'],
    26: ['E', 'D', 'A'],
    27: ['E', 'D', 'D', 'D', 'C', 'C', 'D', 'C', 'D', 'D', 'D', 'C', 'D', 'A'],
    28: ['E', 'D', 'D', 'D', 'D', 'C', 'C', 'C', 'D', 'A'],
    29: ['E', 'D', 'D', 'D', 'C', 'D', 'C', 'D', 'D', 'D', 'C', 'D', 'C', 'D', 'C', 'C', 'D', 'D', 'D', 'D', 'C', 'C', 'D', 'C', 'C', 'C', 'A']}
log9 = {
    0: ['E', 'D', 'D', 'C', 'D', 'D', 'A'],
    1: ['E', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'A'],
    2: ['E', 'D', 'D', 'D', 'C', 'D', 'C', 'C', 'C', 'D', 'D', 'A'],
    3: ['E', 'M', 'P', 'P', 'P', 'D', 'D', 'C', 'D', 'C', 'D', 'A'],
    4: ['E', 'D', 'D', 'D', 'D', 'B', 'D', 'H', 'I', 'H', 'I', 'H', 'D', 'D', 'H', 'D', 'D', 'H', 'H', 'A'],
    5: ['E', 'D', 'D', 'D', 'C', 'D', 'B', 'B', 'D', 'D', 'D', 'D', 'D', 'B', 'B', 'B', 'B', 'D', 'C', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'B', 'A'],
    6: ['E', 'D', 'N', 'A'],
    7: ['E', 'D', 'D', 'C', 'D', 'B', 'B', 'D', 'D', 'D', 'D', 'D', 'D', 'A'],
    8: ['E', 'D', 'D', 'A'],
    9: ['E', 'D', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'D', 'C', 'D', 'B', 'C', 'D', 'C', 'D', 'D', 'D', 'D', 'D', 'D', 'C', 'C', 'D', 'B', 'B', 'A'],
    10: ['E', 'D', 'D', 'C', 'D', 'C', 'D', 'D', 'C', 'C', 'D', 'C', 'C', 'D', 'B', 'B', 'B', 'D', 'D', 'C', 'D', 'C', 'C', 'D', 'C', 'D', 'B', 'B', 'B', 'B', 'B', 'D', 'A'],
    11: ['E', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'C', 'D', 'A'],
    12: ['E', 'D', 'D', 'D', 'D', 'C', 'C', 'D', 'O', 'D', 'A'],
    13: ['E', 'D', 'D', 'D', 'C', 'D', 'C', 'C', 'D', 'D', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'H', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'A'],
    14: ['E', 'D', 'D', 'C', 'D', 'C', 'C', 'D', 'C', 'D', 'C', 'A'],
    15: ['E', 'D', 'D', 'C', 'D', 'C', 'D', 'C', 'D', 'C', 'D', 'A'],
    16: ['E', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'A'],
    17: ['E', 'D', 'D', 'C', 'D', 'D', 'C', 'C', 'D', 'A'],
    18: ['E', 'D', 'D', 'C', 'D', 'D', 'B', 'B', 'B', 'B', 'B', 'B', 'A'],
    19: ['E', 'D', 'D', 'C', 'C', 'D', 'D', 'D', 'D', 'A'],
    20: ['E', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'C', 'D', 'C', 'D', 'D', 'C', 'D', 'C', 'D', 'B', 'B', 'D', 'D', 'C', 'A'],
    21: ['E', 'D', 'D', 'D', 'A'],
    22: ['E', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'A'],
    23: ['E', 'D', 'D', 'C', 'D', 'C', 'D', 'C', 'D', 'A'],
    24: ['E', 'D', 'D', 'C', 'D', 'B', 'B', 'B', 'B', 'A'],
    25: ['E', 'D', 'D', 'C', 'D', 'D', 'D', 'C', 'D', 'D', 'A'],
    26: ['E', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'A'],
    27: ['E', 'D', 'D', 'D', 'D', 'C', 'C', 'C', 'D', 'A'],
    28: ['E', 'D', 'D', 'C', 'C', 'D', 'C', 'D', 'C', 'C', 'D', 'D', 'C', 'D', 'C', 'D', 'C', 'C', 'A'],
    29: ['E', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'A'],
    30: ['E', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'B', 'A'],
    31: ['E', 'D', 'D', 'D', 'C', 'D', 'A'],
    32: ['E', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'A'],
    33: ['E', 'D', 'A'],
    34: ['E', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'J', 'J', 'D', 'D', 'C', 'D', 'C', 'C', 'D', 'A'],
    35: ['E', 'D', 'D', 'C', 'D', 'D', 'C', 'D', 'C', 'D', 'D', 'D', 'A'],
    36: ['E', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'C', 'D', 'D', 'C', 'D', 'D', 'H', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'C', 'D', 'C', 'D', 'C', 'D', 'B', 'B', 'C', 'B', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'C', 'D', 'B', 'B', 'D', 'D', 'D', 'C', 'D', 'B', 'B', 'B', 'B', 'D', 'C', 'A'],
    37: ['E', 'D', 'C', 'C', 'D', 'D', 'C', 'D', 'B', 'D', 'A'],
    38: ['E', 'D', 'D', 'H', 'I', 'H', 'I', 'H', 'D', 'H', 'D', 'H', 'D', 'D', 'H', 'H', 'D', 'A'],
    39: ['E', 'D', 'D', 'D', 'D', 'A'],
    40: ['E', 'D', 'D', 'C', 'D', 'C', 'D', 'A'],
    41: ['E', 'D', 'D', 'C', 'D', 'D', 'D', 'C', 'D', 'C', 'C', 'D', 'D', 'A'],
    42: ['E', 'D', 'D', 'D', 'D', 'D', 'C', 'D', 'B', 'B', 'D', 'D', 'D', 'C', 'C', 'C', 'C', 'C', 'C', 'C', 'D', 'D', 'D', 'D', 'C', 'D', 'D', 'C', 'D', 'C', 'D', 'B', 'B', 'A'],
    43: ['E', 'D', 'D', 'D', 'D', 'D', 'C', 'D', 'C', 'D', 'D', 'D', 'D', 'H', 'D', 'D', 'H', 'H', 'D', 'Z', 'A'],
    44: ['E', 'D', 'D', 'C', 'D', 'C', 'D', 'D', 'B', 'B', 'B', 'B', 'B', 'D', 'D', 'C', 'D', 'D', 'D', 'C', 'D', 'C', 'D', 'B', 'A'],
    45: ['E', 'D', 'D', 'C', 'D', 'C', 'D', 'J', 'D', 'D', 'C', 'D', 'D', 'C', 'D', 'H', 'D', 'D', 'D', 'D', 'D', 'A'],
    46: ['E', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'C', 'D', 'C', 'D', 'D', 'D', 'A'],
    47: ['E', 'D', 'D', 'D', 'C', 'D', 'B', 'B', 'B', 'B', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'D', 'C', 'D', 'B', 'B', 'B', 'B', 'B', 'D', 'B', 'D', 'C', 'C', 'D', 'D', 'D', 'C', 'D', 'B', 'D', 'D', 'D', 'D', 'D', 'A'],
    48: ['E', 'D', 'D', 'D', 'C', 'D', 'C', 'D', 'D', 'D', 'C', 'D', 'C', 'D', 'C', 'C', 'D', 'D', 'D', 'D', 'C', 'C', 'D', 'C', 'C', 'C', 'A'],
    49: ['E', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'C', 'D', 'D', 'A'],
    50: ['E', 'D', 'D', 'D', 'C', 'D', 'C', 'A'],
    51: ['E', 'D', 'D', 'D', 'D', 'B', 'B', 'B', 'D', 'D', 'C', 'C', 'C', 'C', 'D', 'B', 'B', 'B', 'D', 'D', 'D', 'C', 'C', 'D', 'B', 'B', 'B', 'B', 'A'],
    52: ['E', 'D', 'N', 'D', 'A'],
    53: ['E', 'D', 'D', 'D', 'C', 'D', 'D', 'A'],
    54: ['E', 'D', 'D', 'D', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'C', 'D', 'C', 'D', 'C', 'D', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'D', 'C', 'D', 'A'],
    55: ['E', 'D', 'D', 'C', 'D', 'D', 'B', 'B', 'B', 'B', 'B', 'B', 'A'],
    56: ['E', 'D', 'D', 'D', 'D', 'D', 'D', 'C', 'C', 'D', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'H', 'D', 'D', 'F', 'B', 'D', 'D', 'D', 'C', 'D', 'C', 'C', 'D', 'D', 'J', 'J', 'D', 'D', 'C', 'D', 'D', 'D', 'C', 'D', 'D', 'C', 'C', 'C', 'D', 'C', 'D', 'C', 'D', 'D', 'D', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'D', 'O', 'D', 'D', 'A'],
    57: ['E', 'D', 'D', 'D', 'C', 'C', 'D', 'C', 'D', 'D', 'D', 'C', 'D', 'A'],
    58: ['E', 'D', 'D', 'D', 'D', 'B', 'D', 'A'],
    59: ['E', 'D', 'D', 'D', 'C', 'C', 'D', 'D', 'D', 'C', 'C', 'D', 'C', 'C', 'D', 'B', 'D', 'D', 'C', 'D', 'C', 'C', 'D', 'D', 'D', 'C', 'D', 'C', 'C', 'D', 'B', 'D', 'D', 'C', 'D', 'C', 'C', 'C', 'J', 'D', 'A'],
    60: ['E', 'D', 'D', 'C', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'C', 'D', 'C', 'D', 'B', 'B', 'A'],
    61: ['E', 'D', 'D', 'D', 'B', 'B', 'B', 'B', 'B', 'B', 'A'],
    62: ['E', 'D', 'D', 'D', 'C', 'D', 'A'],
    63: ['E', 'D', 'D', 'D', 'C', 'D', 'C', 'C', 'C', 'D', 'D', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'D', 'C', 'D', 'D', 'C', 'D', 'D', 'D', 'A'],
    64: ['E', 'D', 'D', 'C', 'D', 'D', 'A'],
    65: ['E', 'D', 'D', 'C', 'C', 'A'],
    66: ['E', 'D', 'D', 'C', 'D', 'A'],
    67: ['E', 'D', 'D', 'D', 'D', 'C', 'D', 'C', 'D', 'D', 'A'],
    68: ['E', 'D', 'D', 'C', 'D', 'D', 'H', 'D', 'A'],
    69: ['E', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'C', 'D', 'B', 'B', 'B', 'A'],
    70: ['E', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'C', 'D', 'C', 'D', 'D', 'D', 'D', 'C', 'D', 'A'],
    71: ['E', 'D', 'D', 'D', 'C', 'D', 'D', 'A'],
    72: ['E', 'D', 'D', 'H', 'D', 'D', 'D', 'D', 'D', 'D', 'A'],
    73: ['E', 'D', 'D', 'C', 'C', 'D', 'D', 'D', 'C', 'C', 'A'],
    74: ['E', 'D', 'D', 'C', 'D', 'A'],
    75: ['E', 'D', 'D', 'D', 'H', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'C', 'C', 'D', 'C', 'D', 'C', 'C', 'D', 'C', 'D', 'C', 'D', 'C', 'C', 'D', 'D', 'D', 'D', 'A'],
    76: ['E', 'D', 'C', 'D', 'C', 'D', 'D', 'D', 'C', 'D', 'C', 'D', 'B', 'B', 'A'],
    77: ['E', 'D', 'N', 'N', 'N', 'N', 'A'],
    78: ['E', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'A']}
log10 = {
    0: ['E', 'D', 'D', 'D', 'D', 'D', 'C', 'A'],
    1: ['E', 'D', 'D', 'D', 'B', 'B', 'D', 'B', 'B', 'B', 'A'],
    2: ['E', 'D', 'D', 'B', 'B', 'B', 'B', 'F', 'D', 'C', 'A'],
    3: ['E', 'D', 'N', 'A'],
    4: ['E', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'A'],
    5: ['E', 'D', 'D', 'D', 'B', 'B', 'B', 'B', 'D', 'B', 'B', 'D', 'B', 'B', 'A'],
    6: ['E', 'D', 'A'],
    7: ['E', 'D', 'D', 'D', 'D', 'B', 'C', 'C', 'D', 'B', 'D', 'D', 'D', 'A'],
    8: ['E', 'D', 'D', 'D', 'D', 'D', 'B', 'D', 'A'],
    9: ['E', 'D', 'D', 'C', 'D', 'C', 'D', 'D', 'D', 'C', 'D', 'D', 'D', 'C', 'D', 'C', 'D', 'C', 'D', 'C', 'D', 'D', 'A'],
    10: ['E', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'C', 'D', 'C', 'D', 'B', 'A'],
    11: ['E', 'D', 'F', 'F', 'A'],
    12: ['E', 'D', 'D', 'D', 'D', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'D', 'B', 'B', 'B', 'B', 'D', 'D', 'B', 'B', 'B', 'C', 'A'],
    13: ['E', 'D', 'D', 'C', 'D', 'B', 'B', 'B', 'C', 'C', 'D', 'D', 'C', 'D', 'B', 'B', 'B', 'B', 'C', 'D', 'C', 'D', 'B', 'B', 'C', 'D', 'C', 'D', 'B', 'B', 'B', 'B', 'B', 'C', 'D', 'D', 'B', 'B', 'A'],
    14: ['E', 'D', 'D', 'C', 'D', 'D', 'D', 'C', 'D', 'C', 'D', 'B', 'B', 'C', 'C', 'D', 'C', 'D', 'B', 'A'],
    15: ['E', 'D', 'D', 'C', 'D', 'D', 'D', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'A'],
    16: ['E', 'D', 'D', 'C', 'C', 'A'],
    17: ['E', 'D', 'D', 'F', 'D', 'D', 'B', 'B', 'B', 'D', 'D', 'B', 'B', 'B', 'D', 'D', 'B', 'B', 'B', 'B', 'D', 'B', 'B', 'B', 'B', 'A'],
    18: ['E', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'A'],
    19: ['E', 'D', 'F', 'D', 'G', 'C', 'D', 'D', 'D', 'D', 'B', 'B', 'A'],
    20: ['E', 'D', 'D', 'F', 'D', 'H', 'H', 'A'],
    21: ['E', 'D', 'D', 'D', 'A'],
    22: ['E', 'D', 'D', 'D', 'B', 'B', 'B', 'B', 'B', 'B', 'D', 'B', 'B', 'B', 'B', 'A'],
    23: ['E', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'A'],
    24: ['E', 'D', 'D', 'D', 'B', 'B', 'D', 'B', 'B', 'B', 'B', 'B', 'B', 'D', 'A'],
    25: ['E', 'A'],
    26: ['E', 'C', 'A'],
    27: ['E', 'D', 'D', 'D', 'C', 'C', 'A'],
    28: ['E', 'D', 'D', 'F', 'A'],
    29: ['E', 'D', 'D', 'H', 'I', 'H', 'D', 'H', 'D', 'D', 'D', 'B', 'D', 'H', 'I', 'H', 'D', 'C', 'G', 'F', 'D', 'D', 'D', 'A'],
    30: ['E', 'D', 'F', 'D', 'A'],
    31: ['E', 'D', 'D', 'D', 'D', 'D', 'D', 'B', 'B', 'A'],
    32: ['E', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'D', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'A'],
    33: ['E', 'D', 'D', 'D', 'B', 'B', 'B', 'B', 'A'],
    34: ['E', 'D', 'B', 'D', 'D', 'D', 'C', 'C', 'C', 'B', 'D', 'D', 'D', 'K', 'F', 'A'],
    35: ['E', 'D', 'D', 'C', 'C', 'F', 'D', 'D', 'A'],
    36: ['E', 'D', 'D', 'D', 'D', 'B', 'B', 'B', 'B', 'D', 'B', 'B', 'B', 'B', 'D', 'D', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'C', 'C', 'B', 'B', 'B', 'B', 'B', 'D', 'D', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'A'],
    37: ['E', 'D', 'F', 'D', 'A'],
    38: ['E', 'D', 'D', 'B', 'B', 'B', 'B', 'D', 'B', 'D', 'D', 'B', 'B', 'B', 'B', 'B', 'D', 'D', 'B', 'B', 'A'],
    39: ['E', 'D', 'F', 'F', 'F', 'F', 'F', 'A'],
    40: ['E', 'D', 'D', 'D', 'D', 'A'],
    41: ['E', 'D', 'D', 'C', 'D', 'D', 'C', 'C', 'D', 'C', 'D', 'D', 'C', 'D', 'D', 'C', 'D', 'C', 'D', 'A'],
    42: ['E', 'D', 'D', 'D', 'D', 'D', 'D', 'B', 'D', 'D', 'D', 'B', 'B', 'B', 'D', 'B', 'A'],
    43: ['E', 'D', 'D', 'C', 'G', 'A'],
    44: ['E', 'D', 'D', 'D', 'D', 'D', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'D', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'A'],
    45: ['E', 'D', 'D', 'C', 'D', 'C', 'D', 'C', 'D', 'B', 'D', 'C', 'D', 'A'],
    46: ['E', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'B', 'D', 'D', 'A'],
    47: ['E', 'D', 'D', 'F', 'A'],
    48: ['E', 'D', 'D', 'K', 'D', 'H', 'A', 'D', 'A'],
    49: ['E', 'D', 'D', 'D', 'B', 'B', 'D', 'D', 'A'],
    50: ['E', 'D', 'D', 'D', 'B', 'D', 'D', 'B', 'B', 'D', 'B', 'B', 'D', 'B', 'B', 'D', 'B', 'B', 'B', 'B', 'B', 'B', 'A'],
    51: ['E', 'D', 'D', 'F', 'D', 'D', 'D', 'B', 'B', 'B', 'D', 'B', 'B', 'D', 'B', 'B', 'D', 'B', 'B', 'B', 'B', 'B', 'A'],
    52: ['E', 'D', 'D', 'D', 'C', 'C', 'A'],
    53: ['E', 'D', 'F', 'D', 'C', 'G', 'D', 'D', 'A'],
    54: ['E', 'D', 'D', 'C', 'G', 'D', 'A'],
    55: ['E', 'D', 'D', 'C', 'D', 'D', 'D', 'D', 'D', 'A'],
    56: ['E', 'D', 'F', 'F', 'D', 'H', 'H', 'H', 'H', 'H', 'I', 'I', 'H', 'D', 'H', 'I', 'D', 'H', 'D', 'H', 'H', 'D', 'C', 'D', 'A'],
    57: ['E', 'D', 'D', 'D', 'B', 'B', 'B', 'D', 'B', 'B', 'B', 'B', 'D', 'D', 'B', 'B', 'B', 'B', 'B', 'B', 'D', 'B', 'B', 'D', 'A'],
    58: ['E', 'D', 'D', 'D', 'B', 'B', 'D', 'C', 'C', 'A'],
    59: ['E', 'D', 'F', 'A'],
    60: ['E', 'D', 'F', 'D', 'D', 'D', 'B', 'B', 'D', 'B', 'B', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'B', 'B', 'D', 'B', 'B', 'B', 'B', 'B', 'B', 'A'],
    61: ['E', 'D', 'D', 'H', 'H', 'I', 'H', 'H', 'A'],
    62: ['E', 'B', 'A'],
    63: ['E', 'M', 'A'],
    64: ['E', 'D', 'D', 'A'],
    65: ['E', 'D', 'D', 'C', 'C', 'C', 'A'],
    66: ['E', 'D', 'F', 'D', 'D', 'B', 'B', 'A'],
    67: ['E', 'D', 'D', 'C', 'D', 'D', 'D', 'A'],
    68: ['E', 'D', 'D', 'C', 'D', 'B', 'B', 'A'],
    69: ['E', 'D', 'D', 'D', 'D', 'D', 'D', 'A'],
    70: ['E', 'D', 'D', 'K', 'D', 'C', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'A'],
    71: ['E', 'D', 'D', 'D', 'C', 'D', 'B', 'B', 'A'],
    72: ['E', 'D', 'D', 'D', 'B', 'B', 'B', 'B', 'D', 'C', 'C', 'A'],
    73: ['E', 'D', 'D', 'F', 'D', 'D', 'B', 'D', 'A'],
    74: ['E', 'D', 'D', 'D', 'B', 'A'],
    75: ['E', 'D', 'D', 'C', 'C', 'C', 'D', 'B', 'B', 'B', 'A'],
    76: ['E', 'D', 'D', 'D', 'B', 'B', 'D', 'C', 'G', 'C', 'B', 'D', 'D', 'D', 'B', 'B', 'B', 'B', 'B', 'D', 'B', 'B', 'D', 'D', 'B', 'B', 'D', 'B', 'B', 'D', 'D', 'B', 'B', 'D', 'B', 'B', 'D', 'D', 'B', 'B', 'D', 'B', 'D', 'B', 'D', 'D', 'B', 'B', 'D', 'B', 'B', 'B', 'B', 'D', 'D', 'B', 'B', 'B', 'B', 'D', 'B', 'B', 'B', 'B', 'D', 'D', 'B', 'B', 'B', 'B', 'D', 'B', 'B', 'B', 'B', 'A'],
    77: ['E', 'D', 'D', 'D', 'D', 'B', 'D', 'H', 'I', 'H', 'D', 'H', 'I', 'H', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'H', 'D', 'H', 'I', 'H', 'A'],
    78: ['E', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'B', 'D', 'D', 'D', 'B', 'A'],
    79: ['E', 'D', 'C', 'C', 'D', 'D', 'C', 'F', 'F', 'A'],
    80: ['E', 'D', 'D', 'D', 'D', 'B', 'B', 'B', 'B', 'B', 'D', 'D', 'D', 'B', 'B', 'A'],
    81: ['E', 'D', 'D', 'C', 'C', 'D', 'C', 'D', 'C', 'P', 'P', 'D', 'D', 'D', 'D', 'J', 'D', 'A'],
    82: ['E', 'D', 'D', 'D', 'D', 'B', 'B', 'B', 'B', 'D', 'D', 'D', 'B', 'B', 'F', 'D', 'H', 'H', 'I', 'H', 'H', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'B', 'B', 'C', 'C', 'C', 'C', 'D', 'D', 'D', 'A'],
    83: ['E', 'D', 'D', 'B', 'B', 'A'],
    84: ['E', 'D', 'D', 'D', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'D', 'B', 'D', 'D', 'B', 'B', 'B', 'B', 'B', 'B', 'D', 'B', 'B', 'B', 'D', 'A'],
    85: ['E', 'D', 'D', 'D', 'D', 'B', 'B', 'B', 'D', 'B', 'D', 'D', 'D', 'D', 'D', 'D', 'B', 'D', 'D', 'B', 'B', 'D', 'D', 'B', 'A'],
    86: ['E', 'D', 'D', 'D', 'H', 'H', 'D', 'D', 'D', 'C', 'K', 'A'],
    87: ['E', 'D', 'D', 'B', 'B', 'B', 'B', 'B', 'A'],
    88: ['E', 'D', 'D', 'D', 'D', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'D', 'D', 'A'],
    89: ['E', 'D', 'D', 'C', 'D', 'D', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'A'],
    90: ['E', 'D', 'D', 'D', 'D', 'D', 'B', 'B', 'D', 'D', 'D', 'B', 'A'],
    91: ['E', 'D', 'D', 'D', 'B', 'B', 'B', 'B', 'D', 'B', 'B', 'B', 'B', 'B', 'D', 'D', 'D', 'D', 'A'],
    92: ['E', 'D', 'F', 'D', 'D', 'D', 'B', 'B', 'B', 'F', 'D', 'C', 'C', 'G', 'A'],
    93: ['E', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'B', 'B', 'B', 'B', 'B', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'B', 'B', 'A'],
    94: ['E', 'D', 'D', 'D', 'D', 'B', 'B', 'B', 'A'],
    95: ['E', 'D', 'D', 'C', 'C', 'D', 'H', 'D', 'A'],
    96: ['E', 'D', 'D', 'D', 'C', 'A'],
    97: ['E', 'C', 'A'],
    98: ['E', 'D', 'D', 'G', 'D', 'C', 'A'],
    99: ['E', 'D', 'A']}

alphabet = []

testCrom00 = [[0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1],
              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], #
              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1],
              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1],
              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1],
              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1],
              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1],
              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1],
              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
              [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0],
              [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0],
              [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0]]  # precisioness: 0.857143
testCrom01 = [[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0],
            [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0],
            [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0],
            [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]] # precisioness: 0.694444
testCrom1 = [[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
            [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]  # precisioness: 0.964286
testCrom =  [[0, 0,   1, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0, 0],
             [0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0, 0],

             [0, 0,   0, 0,   1, 0,   1, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0, 0],
             [0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0, 0],

             [0, 0,   0, 0,   0, 0,   0, 0,   1, 0,   1, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 1, 0],
             [0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0, 0],

             [0, 0,   0, 0,   0, 0,   0, 0,   1, 0,   0, 0,   1, 0,   0, 0,   0, 0,   0, 0,   0, 1, 0],
             [0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0, 0],

             [0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   1, 0,   1, 0,   0, 0,   0, 0,   0, 0,   0, 0, 0],
             [0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0, 0],

             [0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   1, 0,   0, 0,   0, 0,   0, 0, 0],
             [0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0, 0],

             [0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   1, 0,   0, 0,   0, 0,   0, 0, 0],
             [0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0, 0],

             [0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   1, 0,   1, 0,   0, 0, 0],
             [0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0, 0],

             [0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   1, 0,   0, 0, 0],
             [0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0, 0],

             [0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0, 0],
             [0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0, 0],

             [0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0, 0],
             [0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   1, 0,   1, 0,   0, 0,   0, 0,   0, 0,   0, 0, 0],
             [0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0, 0]] # precisioness: 1.500000
testCromeaChanged =  [[0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0, 0],
             [0, 0,   0, 1,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0, 0],

             [0, 0,   0, 0,   0, 1,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0, 0],
             [0, 0,   0, 0,   0, 0,   1, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0, 0],

             [0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0, 1],
             [0, 0,   0, 0,   0, 0,   0, 0,   0, 1,   0, 1,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0, 0],

             [0, 0,   0, 0,   0, 0,   0, 0,   0, 1,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0, 1],
             [0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 1,   0, 0,   0, 0,   0, 0,   0, 0, 0],

             [0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0, 0],
             [0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   1, 0,   0, 1,   0, 0,   0, 0,   0, 0,   0, 0, 0],

             [0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 1,   0, 0,   0, 0,   0, 0, 0],
             [0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0, 0],

             [0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0, 0],
             [0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   1, 0,   0, 0,   0, 0,   0, 0, 0],

             [0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 1,   0, 0, 0],
             [0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 1,   0, 0,   0, 0, 0],

             [0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0, 0],
             [0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   1, 0,   0, 0, 0],

             [0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0, 0],
             [0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0, 0],

             [0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0, 0],
             [0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   0, 0, 0],
             [0, 0,   0, 0,   0, 0,   0, 0,   0, 0,   1, 0,   1, 0,   0, 0,   0, 0,   0, 0,   0, 0, 0]]
testCrom3b =[[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]] # precisioness: 1.250000

def getTaskID(task):
    i = 0
    while alphabet[i] != task:
        i = i + 1
    return i

def createEmptyIndividualTask():
    task = [0 for _ in range((2 * len(alphabet)) + 3)]
    return task

def createAuxiliaryCromossome(usedLog):
    auxCrom = [createEmptyIndividualTask() for _ in range((2 * len(alphabet)) + 3)]
    for i in range(len(alphabet)):
        for j in range(len(usedLog)):
            for k in range(len(usedLog[j]) - 1):
                if usedLog[j][k] == alphabet[i]:
                    auxCrom[(i * 2)][(getTaskID(usedLog[j][k + 1]) * 2)] = 1
                    auxCrom[(i * 2)][(getTaskID(usedLog[j][k + 1]) * 2) + 1] = 1
                    auxCrom[(i * 2) + 1][(getTaskID(usedLog[j][k + 1]) * 2)] = 1
                    auxCrom[(i * 2) + 1][(getTaskID(usedLog[j][k + 1]) * 2) + 1] = 1
    enabledTasks = 0
    for j in range(len(auxCrom) - 2):
        for k in range(1, len(auxCrom[j]) - 1):
            if auxCrom[j][k] == 1:
                enabledTasks = enabledTasks + 1
    return (auxCrom, enabledTasks / 4)

def DMmeasures(t1, t2):
    l2l = 0 #the number of times that the substring "t1t2t1" occurs in a log.
    follows = 0 #the number of times that a task is directly followed by another one. That is, how often the substring "t1t2" occurs in a log.
    for i in range(len(log)):
        for j in range(len(log[i]) - 2):
            if (log[i][j] == t1) and (log[i][j + 1] == t2):
                follows = follows + 1
                if (log[i][j + 2] == t1):
                    l2l = l2l + 1
    return (l2l, follows)

def dependencyMeasure(t1, t2):
    dependencyMeasure = 0
    (l2l_t1_t2, follows_t1_t2) = DMmeasures(t1, t2)
    (l2l_t2_t1, follows_t2_t1) = DMmeasures(t2, t1)
    if (t1 == t2):
        dependencyMeasure = (follows_t1_t2 / (follows_t1_t2 + 1))
    else:
        if (t1 != t2):
            if (l2l_t1_t2 == 0):
                dependencyMeasure = ((follows_t1_t2 - follows_t2_t1) / (follows_t1_t2 + follows_t2_t1 + 1))
            else:
                if (l2l_t1_t2 > 0):
                    dependencyMeasure = ((l2l_t1_t2 + l2l_t2_t1) / (l2l_t1_t2 + l2l_t2_t1 + 1))
                else:
                    quit()
    return dependencyMeasure

def createInitialIndividual(auxCrom):
    influenceControl = 2 #control the "influence" of the dependency measure in the probability of setting a causality relation. Higher values for p lead to the inference of fewer causality relations among the tasks in the event log, and vice-versa.
    for i in range(len(alphabet) - 1):
        for j in range(1, len(alphabet)):
            if ran.random() < pow(dependencyMeasure(alphabet[i], alphabet[j]), influenceControl):
                if ran.random() < 0.5:
                    if ran.random() < 0.5:
                        auxCrom[(i * 2)][(j * 2)] = 1
                    else:
                        auxCrom[(i * 2)][(j * 2) + 1] = 1
                else:
                    if ran.random() < 0.5:
                        auxCrom[(i * 2) + 1][(j * 2)] = 1
                    else:
                        auxCrom[(i * 2) + 1][(j * 2) + 1] = 1
    for i in range(len(alphabet)):
        if ran.random() < 0.5:
            auxCrom[i * 2][-3] = 1
        if ran.random() < 0.5:
            auxCrom[i * 2][-2] = 1
        if ran.random() < 0.5:
            auxCrom[i * 2][-1] = 1
        if ran.random() < 0.5:
            auxCrom[-3][i * 2] = 1
        if ran.random() < 0.5:
            auxCrom[-2][i * 2] = 1
        if ran.random() < 0.5:
            auxCrom[-1][i * 2] = 1
    return auxCrom

def initializeIndividual():
    individual = [createEmptyIndividualTask() for _ in range((2 * len(alphabet)) + 3)]
    return individual

def createAlphabet(log, alphabet):
    k = 0
    for i in range(len(log)):
        for j in range(len(log[i])):
            if alphabet.count(log[i][j]) == 0:
                alphabet.append(log[i][j])
            k = k + 1
    alphabet.sort()
    alphabet.insert(0,'Begin')
    alphabet.append('End')
    return

def createAlphabetIM(log, alphabet):
    k = 0
    for i in range(len(log)):
        for j in range(len(log[i])):
            if alphabet.count(log[i][j]) == 0:
                alphabet.append(log[i][j])
            k = k + 1
    alphabet.sort()
    alphabet.insert(0,'Begin')
    alphabet.append('End')
    return

def processLog(log, logSizeAndMaxTraceSize):
    for i in range(len(log)):
        log[i].insert(0,'Begin')
        log[i].append('End')
        if logSizeAndMaxTraceSize[1] > len(log[i]):
            logSizeAndMaxTraceSize[1] = len(log[i])
        if logSizeAndMaxTraceSize[2] < len(log[i]):
            logSizeAndMaxTraceSize[2] = len(log[i])
    logSizeAndMaxTraceSize[0] = len(log)
    return logSizeAndMaxTraceSize

def nonblank_lines(f):
    for l in f:
        line = l.rstrip()
        if line:
            yield line


def initializePopulation(island, population_size, TPweight, precisenessWeight, evaluateCompANDPrec, completenessWeight, logSizeAndMaxTraceSize, numberOfRandomTracesPerLogTrace, traceSizeFactor):
        population = [initializeIndividual() for _ in range(population_size)]
        (referenceCromossome, averageEnabledTasks) = createAuxiliaryCromossome(log)
        for i in range(len(population)):
            population[i] = createInitialIndividual(population[i])
        eci.create_pop(island, population)  # modificacao
        return (population, fitn.evaluationPopulation(population, referenceCromossome, TPweight, precisenessWeight,
                                                      evaluateCompANDPrec, completenessWeight, logSizeAndMaxTraceSize,
                                                      numberOfRandomTracesPerLogTrace, traceSizeFactor,
                                                      averageEnabledTasks), referenceCromossome, averageEnabledTasks)